2025-07-06 02:13:09,764 - INFO - fabric_cicd._common._fabric_endpoint - Executing as Application Id '04b07795-8ddb-461a-bbee-02f9e1bf7b46'
2025-07-06 02:13:09,768 - INFO - fabric_cicd._common._validate_input - Relative directory path 'sample_project/fabric_workspace_items' resolved as '/workspaces/ingen_fab/sample_project/fabric_workspace_items'
2025-07-06 02:13:09,919 - WARNING - fabric_cicd._parameter._parameter - Parameter file not found with path: /workspaces/ingen_fab/sample_project/fabric_workspace_items/parameter.yml
2025-07-06 02:13:09,919 - WARNING - fabric_cicd._parameter._parameter - Validation terminated: not found
2025-07-06 02:13:12,097 - INFO - fabric_cicd.fabric_workspace - Publishing Workspace Folders
2025-07-06 02:13:30,599 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:13:32,808 - WARNING - fabric_cicd.publish - Using items_to_include is risky as it can prevent needed dependencies from being deployed.  Use at your own risk.
2025-07-06 02:13:32,808 - INFO - fabric_cicd.fabric_workspace - Publishing var_lib.VariableLibrary as it is in the items to include list.
2025-07-06 02:13:32,811 - INFO - fabric_cicd.fabric_workspace - Publishing VariableLibrary 'var_lib'
2025-07-06 02:13:32,811 - INFO - fabric_cicd.fabric_workspace - Creating new item: var_lib (VariableLibrary)
2025-07-06 02:13:32,811 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "var_lib",
  "type": "VariableLibrary",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIlZhcmlhYmxlTGlicmFyeSIsCiAgICAiZGlzcGxheU5hbWUiOiAidmFyX2xpYiIsCiAgICAiZGVzY3JpcHRpb24iOiAiIgogIH0sCiAgImNvbmZpZyI6IHsKICAgICJ2ZXJzaW9uIjogIjIuMCIsCiAgICAibG9naWNhbElkIjogImUyNzA3MGUzLWRmOGEtOTVkOS00NDg5LTliYWU0MDA2MTJmYyIKICB9Cn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "settings.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3NldHRpbmdzLzEuMC4wL3NjaGVtYS5qc29uIiwKICAidmFsdWVTZXRzT3JkZXIiOiBbCiAgICAicHJvZHVjdGlvbiIsCiAgICAidGVzdCIsCiAgICAiZGV2ZWxvcG1lbnQiLAogICAgImRldmVsb3BtZW50X2pyIiwKICAgICJzYW5kYm94IiwKICAgICJsb2NhbCIKICBdCn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "variables.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhcmlhYmxlcy8xLjAuMC9zY2hlbWEuanNvbiIsCiAgInZhcmlhYmxlcyI6IFsKICAgIHsKICAgICAgIm5hbWUiOiAiZmFicmljX2Vudmlyb25tZW50IiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImZhYnJpY19kZXBsb3ltZW50X3dvcmtzcGFjZV9pZCIsCiAgICAgICJub3RlIjogIlRoZSBpZCBvZiB0aGUgd29ya3NwYWNlIHRoYXQgdGhpcyBzb2x1dGlvbiB3aWxsIGJlIGRlcGxveWVkIHRvLiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX3NvdXJjZV9zcWxfY29ubmVjdGlvbiIsCiAgICAgICJub3RlIjogIiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX3NvdXJjZV9kYXRhYmFzZV8xIiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ19sYWtlaG91c2VfbmFtZSIsCiAgICAgICJub3RlIjogIiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjb25maWdfd29ya3NwYWNlX2lkIiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ19sYWtlaG91c2VfaWQiLAogICAgICAibm90ZSI6ICIiLAogICAgICAidHlwZSI6ICJTdHJpbmciLAogICAgICAidmFsdWUiOiAiIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dvcmtzcGFjZV9pZCIsCiAgICAgICJub3RlIjogIiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfd2FyZWhvdXNlX2lkIiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd193YXJlaG91c2VfbmFtZSIsCiAgICAgICJub3RlIjogIiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfbGFrZWhvdXNlX2lkIiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd19sYWtlaG91c2VfbmFtZSIsCiAgICAgICJub3RlIjogIiIsCiAgICAgICJ0eXBlIjogIlN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJsZWdhY3lfc3luYXBzZV9jb25uZWN0aW9uX25hbWUiLAogICAgICAibm90ZSI6ICIiLAogICAgICAidHlwZSI6ICJTdHJpbmciLAogICAgICAidmFsdWUiOiAiIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9leHBvcnRfc2hvcnRjdXRfcGF0aF9pbl9vbmVsYWtlIiwKICAgICAgIm5vdGUiOiAiIiwKICAgICAgInR5cGUiOiAiU3RyaW5nIiwKICAgICAgInZhbHVlIjogIiIKICAgIH0KICBdCn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/development.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJkZXZlbG9wbWVudCIsCiAgInZhcmlhYmxlT3ZlcnJpZGVzIjogWwogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZW52aXJvbm1lbnQiLAogICAgICAidmFsdWUiOiAiZGV2ZWxvcG1lbnQiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZGVwbG95bWVudF93b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiM2E0ZmMxM2MtZjdjNS00NjNlLWE5ZGUtNTdjNDc1NDY5OWZmIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9zb3VyY2VfZGF0YWJhc2VfMSIsCiAgICAgICJ2YWx1ZSI6ICJ0ZXN0MSIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ193b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiM2E0ZmMxM2MtZjdjNS00NjNlLWE5ZGUtNTdjNDc1NDY5OWZmIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9zb3VyY2Vfc3FsX2Nvbm5lY3Rpb24iLAogICAgICAidmFsdWUiOiAic2Fuc2RhaXN5bi1vbmRlbWFuZC5zcWwuYXp1cmVzeW5hcHNlLm5ldCIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ19sYWtlaG91c2VfbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJjb25maWciCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfd2FyZWhvdXNlX25hbWUiLAogICAgICAidmFsdWUiOiAiZWR3IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiY29uZmlnX2xha2Vob3VzZV9pZCIsCiAgICAgICJ2YWx1ZSI6ICIyNjI5ZDRjYy02ODVjLTQ1OGEtODY2Yi1iNDcwNWRkZTcxYTciCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfd29ya3NwYWNlX2lkIiwKICAgICAgInZhbHVlIjogIjUwZmJjYWIwLTdkNTYtNDZmNy05MGY2LTgwY2ViMDBhYzg2ZCIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd193YXJlaG91c2VfaWQiLAogICAgICAidmFsdWUiOiAicyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd19sYWtlaG91c2VfaWQiLAogICAgICAidmFsdWUiOiAiNmFkYjY3ZDYtYzhlYi00NjEyLTkwNTMtODkwY2FlM2E1NWQ3IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X2xha2Vob3VzZV9uYW1lIiwKICAgICAgInZhbHVlIjogImVkdyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImxlZ2FjeV9zeW5hcHNlX2Nvbm5lY3Rpb25fbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJzeW5hcHNlX2Nvbm5lY3Rpb24iCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX2V4cG9ydF9zaG9ydGN1dF9wYXRoX2luX29uZWxha2UiLAogICAgICAidmFsdWUiOiAiZXhwb3J0cy8iCiAgICB9CiAgXQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/development_jr.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJkZXZlbG9wbWVudF9qciIsCiAgInZhcmlhYmxlT3ZlcnJpZGVzIjogWwogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZW52aXJvbm1lbnQiLAogICAgICAidmFsdWUiOiAiZGV2ZWxvcG1lbnRfanIiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZGVwbG95bWVudF93b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiYjNmYmVhZjctZWM2Ny00NjIyLWJhMzctOGQ4YmNiN2U0MzZhIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9zb3VyY2VfZGF0YWJhc2VfMSIsCiAgICAgICJ2YWx1ZSI6ICJ0ZXN0MSIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ193b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiIyMjIyMiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX3NvdXJjZV9zcWxfY29ubmVjdGlvbiIsCiAgICAgICJ2YWx1ZSI6ICJzYW5zZGFpc3luLW9uZGVtYW5kLnNxbC5henVyZXN5bmFwc2UubmV0IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiY29uZmlnX2xha2Vob3VzZV9uYW1lIiwKICAgICAgInZhbHVlIjogImNvbmZpZyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd193YXJlaG91c2VfbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJlZHciCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjb25maWdfbGFrZWhvdXNlX2lkIiwKICAgICAgInZhbHVlIjogIjI2MjlkNGNjLTY4NWMtNDU4YS04NjZiLWI0NzA1ZGRlNzFhNyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd193b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiIyMjIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dhcmVob3VzZV9pZCIsCiAgICAgICJ2YWx1ZSI6ICIjIyMiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfbGFrZWhvdXNlX2lkIiwKICAgICAgInZhbHVlIjogIjZhZGI2N2Q2LWM4ZWItNDYxMi05MDUzLTg5MGNhZTNhNTVkNyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd19sYWtlaG91c2VfbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJlZHciCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJsZWdhY3lfc3luYXBzZV9jb25uZWN0aW9uX25hbWUiLAogICAgICAidmFsdWUiOiAic3luYXBzZV9jb25uZWN0aW9uIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9leHBvcnRfc2hvcnRjdXRfcGF0aF9pbl9vbmVsYWtlIiwKICAgICAgInZhbHVlIjogImV4cG9ydHMvIgogICAgfQogIF0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/local.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJsb2NhbCIsCiAgInZhcmlhYmxlT3ZlcnJpZGVzIjogWwogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZW52aXJvbm1lbnQiLAogICAgICAidmFsdWUiOiAibG9jYWwiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJmYWJyaWNfZGVwbG95bWVudF93b3Jrc3BhY2VfaWQiLAogICAgICAidmFsdWUiOiAiIyMjIyMiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX3NvdXJjZV9kYXRhYmFzZV8xIiwKICAgICAgInZhbHVlIjogInRlc3QxIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiY29uZmlnX3dvcmtzcGFjZV9pZCIsCiAgICAgICJ2YWx1ZSI6ICIjIyMjIyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInN5bmFwc2Vfc291cmNlX3NxbF9jb25uZWN0aW9uIiwKICAgICAgInZhbHVlIjogInNhbnNkYWlzeW4tb25kZW1hbmQuc3FsLmF6dXJlc3luYXBzZS5uZXQiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjb25maWdfbGFrZWhvdXNlX25hbWUiLAogICAgICAidmFsdWUiOiAiY29uZmlnIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dhcmVob3VzZV9uYW1lIiwKICAgICAgInZhbHVlIjogImVkdyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ19sYWtlaG91c2VfaWQiLAogICAgICAidmFsdWUiOiAiMjYyOWQ0Y2MtNjg1Yy00NThhLTg2NmItYjQ3MDVkZGU3MWE3IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dvcmtzcGFjZV9pZCIsCiAgICAgICJ2YWx1ZSI6ICIjIyMiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfd2FyZWhvdXNlX2lkIiwKICAgICAgInZhbHVlIjogIiMjIyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd19sYWtlaG91c2VfaWQiLAogICAgICAidmFsdWUiOiAiNmFkYjY3ZDYtYzhlYi00NjEyLTkwNTMtODkwY2FlM2E1NWQ3IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X2xha2Vob3VzZV9uYW1lIiwKICAgICAgInZhbHVlIjogImVkdyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImxlZ2FjeV9zeW5hcHNlX2Nvbm5lY3Rpb25fbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJzeW5hcHNlX2Nvbm5lY3Rpb24iCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzeW5hcHNlX2V4cG9ydF9zaG9ydGN1dF9wYXRoX2luX29uZWxha2UiLAogICAgICAidmFsdWUiOiAiZXhwb3J0cy8iCiAgICB9CiAgXQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/production.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJwcm9kdWN0aW9uIiwKICAidmFyaWFibGVPdmVycmlkZXMiOiBbCiAgICB7CiAgICAgICJuYW1lIjogImZhYnJpY19lbnZpcm9ubWVudCIsCiAgICAgICJ2YWx1ZSI6ICJwcm9kdWN0aW9uIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZmFicmljX2RlcGxveW1lbnRfd29ya3NwYWNlX2lkIiwKICAgICAgInZhbHVlIjogIjNhNGZjMTNjLWY3YzUtNDYzZS1hOWRlLTU3YzQ3NTQ2OTlmZiIKICAgIH0KICBdCn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/sandbox.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJzYW5kYm94IiwKICAidmFyaWFibGVPdmVycmlkZXMiOiBbCiAgICB7CiAgICAgICJuYW1lIjogImZhYnJpY19lbnZpcm9ubWVudCIsCiAgICAgICJ2YWx1ZSI6ICJzYW5kYm94IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZmFicmljX2RlcGxveW1lbnRfd29ya3NwYWNlX2lkIiwKICAgICAgInZhbHVlIjogIjNhNGZjMTNjLWY3YzUtNDYzZS1hOWRlLTU3YzQ3NTQ2OTlmZiIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInN5bmFwc2Vfc291cmNlX2RhdGFiYXNlXzEiLAogICAgICAidmFsdWUiOiAidGVzdDEiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjb25maWdfd29ya3NwYWNlX2lkIiwKICAgICAgInZhbHVlIjogIjUwZmJjYWIwLTdkNTYtNDZmNy05MGY2LTgwY2ViMDBhYzg2ZCIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInN5bmFwc2Vfc291cmNlX3NxbF9jb25uZWN0aW9uIiwKICAgICAgInZhbHVlIjogInNhbnNkYWlzeW4tb25kZW1hbmQuc3FsLmF6dXJlc3luYXBzZS5uZXQiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjb25maWdfbGFrZWhvdXNlX25hbWUiLAogICAgICAidmFsdWUiOiAiY29uZmlnIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dhcmVob3VzZV9uYW1lIiwKICAgICAgInZhbHVlIjogImVkdyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImNvbmZpZ19sYWtlaG91c2VfaWQiLAogICAgICAidmFsdWUiOiAiMjNiYTgzNzgtNzg4NC00YWM3LWJhYjUtMTBlMTFhZjQzZDZjIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZWR3X3dvcmtzcGFjZV9pZCIsCiAgICAgICJ2YWx1ZSI6ICI1MGZiY2FiMC03ZDU2LTQ2ZjctOTBmNi04MGNlYjAwYWM4NmQiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfd2FyZWhvdXNlX2lkIiwKICAgICAgInZhbHVlIjogInMiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJlZHdfbGFrZWhvdXNlX2lkIiwKICAgICAgInZhbHVlIjogIjZhZGI2N2Q2LWM4ZWItNDYxMi05MDUzLTg5MGNhZTNhNTVkNyIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImVkd19sYWtlaG91c2VfbmFtZSIsCiAgICAgICJ2YWx1ZSI6ICJlZHciCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJsZWdhY3lfc3luYXBzZV9jb25uZWN0aW9uX25hbWUiLAogICAgICAidmFsdWUiOiAic3luYXBzZV9jb25uZWN0aW9uIgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic3luYXBzZV9leHBvcnRfc2hvcnRjdXRfcGF0aF9pbl9vbmVsYWtlIiwKICAgICAgInZhbHVlIjogImV4cG9ydHMvIgogICAgfQogIF0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "valueSets/test.json",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3ZhcmlhYmxlTGlicmFyeS9kZWZpbml0aW9uL3ZhbHVlU2V0LzEuMC4wL3NjaGVtYS5qc29uIiwKICAibmFtZSI6ICJ0ZXN0IiwKICAidmFyaWFibGVPdmVycmlkZXMiOiBbCiAgICB7CiAgICAgICJuYW1lIjogImZhYnJpY19lbnZpcm9ubWVudCIsCiAgICAgICJ2YWx1ZSI6ICJ0ZXN0IgogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiZmFicmljX2RlcGxveW1lbnRfd29ya3NwYWNlX2lkIiwKICAgICAgInZhbHVlIjogIjNhNGZjMTNjLWY3YzUtNDYzZS1hOWRlLTU3YzQ3NTQ2OTlmZiIKICAgIH0KICBdCn0=",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "ffba61b5-0e26-46f9-91e6-9da6069d039f"
}
2025-07-06 02:13:40,837 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 1 second (Attempt 1/7)...
2025-07-06 02:13:42,086 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 2 seconds (Attempt 2/7)...
2025-07-06 02:13:44,389 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 4 seconds (Attempt 3/7)...
2025-07-06 02:13:48,963 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:13:52,124 - INFO - fabric_cicd._items._variablelibrary - ->Active value set changed to 'development'
2025-07-06 02:13:52,126 - INFO - fabric_cicd.fabric_workspace - Publishing EDW.Warehouse as it is in the items to include list.
2025-07-06 02:13:52,127 - INFO - fabric_cicd.fabric_workspace - Publishing Warehouse 'EDW'
2025-07-06 02:13:52,127 - INFO - fabric_cicd.fabric_workspace - Creating new item: EDW (Warehouse)
2025-07-06 02:13:52,128 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "EDW",
  "type": "Warehouse",
  "folderId": "35cc5a3a-5d21-43bf-97a0-890c51841653"
}
2025-07-06 02:13:54,732 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 1 second (Attempt 1/10)...
2025-07-06 02:13:55,969 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 2 seconds (Attempt 2/10)...
2025-07-06 02:13:58,271 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 4 seconds (Attempt 3/10)...
2025-07-06 02:14:02,519 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 8 seconds (Attempt 4/10)...
2025-07-06 02:14:10,818 - INFO - fabric_cicd._common._fabric_endpoint - ->->Operation in progress. Checking again in 16 seconds (Attempt 5/10)...
2025-07-06 02:14:27,371 - INFO - fabric_cicd._items._warehouse - ->Published
2025-07-06 02:14:27,371 - INFO - fabric_cicd.fabric_workspace - Publishing config.Lakehouse as it is in the items to include list.
2025-07-06 02:14:27,371 - INFO - fabric_cicd.fabric_workspace - Publishing Lakehouse 'config'
2025-07-06 02:14:27,371 - INFO - fabric_cicd.fabric_workspace - Creating new item: config (Lakehouse)
2025-07-06 02:14:27,372 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "config",
  "type": "Lakehouse",
  "folderId": "2d106f3d-c0c6-4ce1-bec5-6ebd134b9aa9"
}
2025-07-06 02:14:36,444 - INFO - fabric_cicd._common._fabric_endpoint - ->->SQL Endpoint provisioning in progress. Checking again in 10 seconds (Attempt 1/10)...
2025-07-06 02:14:47,145 - INFO - fabric_cicd._common._fabric_endpoint - ->->SQL Endpoint provisioning in progress. Checking again in 20 seconds (Attempt 2/10)...
2025-07-06 02:15:07,820 - INFO - fabric_cicd._items._lakehouse - ->Published
2025-07-06 02:15:07,820 - INFO - fabric_cicd._items._environment - Checking Environment Publish State for []
2025-07-06 02:15:08,381 - INFO - fabric_cicd.fabric_workspace - Publishing 00_all_lakehouses_orchestrator_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:08,384 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '00_all_lakehouses_orchestrator_ddl_scripts'
2025-07-06 02:15:08,385 - INFO - fabric_cicd.fabric_workspace - Creating new item: 00_all_lakehouses_orchestrator_ddl_scripts (Notebook)
2025-07-06 02:15:08,386 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "00_all_lakehouses_orchestrator_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMF9hbGxfbGFrZWhvdXNlc19vcmNoZXN0cmF0b3JfZGRsX3NjcmlwdHMiLAogICAgImRlc2NyaXB0aW9uIjogIkV4ZWN1dGVzIGEgc2V0IG9mIERETCBjZWxscyBpbiB0aGUgdGFyZ2V0IExha2Vob3VzZS4iCiAgfSwKICAiY29uZmlnIjogewogICAgInZlcnNpb24iOiAiMi4wIiwKICAgICJsb2dpY2FsSWQiOiAiODZmZmJjYWQtODVhMi00ODIyLThmMzEtOTU3NjIwNTJlZDZjIgogIH0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "0244ced4-d901-4184-a41f-b943d480a5fe"
}
2025-07-06 02:15:12,860 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:12,862 - INFO - fabric_cicd.fabric_workspace - Publishing 001_Initial_Creation_Config_Lakehouses_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:12,866 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '001_Initial_Creation_Config_Lakehouses_ddl_scripts'
2025-07-06 02:15:12,866 - INFO - fabric_cicd.fabric_workspace - Creating new item: 001_Initial_Creation_Config_Lakehouses_ddl_scripts (Notebook)
2025-07-06 02:15:12,866 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "001_Initial_Creation_Config_Lakehouses_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMDFfSW5pdGlhbF9DcmVhdGlvbl9Db25maWdfTGFrZWhvdXNlc19kZGxfc2NyaXB0cyIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhlY3V0ZXMgYSBzZXQgb2YgRERMIGNlbGxzIGluIHRoZSB0YXJnZXQgTGFrZWhvdXNlLiIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICIwODEyMDdiNy0yZDg2LTQ0NTYtODgwNS0wYjFjYTc5ZDZmY2IiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "e88b609d-d677-4982-ae56-b868376479f5"
}
2025-07-06 02:15:18,165 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:18,166 - INFO - fabric_cicd.fabric_workspace - Publishing 0_orchestrator_Config_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:18,167 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '0_orchestrator_Config_ddl_scripts'
2025-07-06 02:15:18,167 - INFO - fabric_cicd.fabric_workspace - Creating new item: 0_orchestrator_Config_ddl_scripts (Notebook)
2025-07-06 02:15:18,168 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "0_orchestrator_Config_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwX29yY2hlc3RyYXRvcl9Db25maWdfZGRsX3NjcmlwdHMiLAogICAgImRlc2NyaXB0aW9uIjogIkV4ZWN1dGVzIGEgc2V0IG9mIERETCBjZWxscyBpbiB0aGUgdGFyZ2V0IExha2Vob3VzZS4iCiAgfSwKICAiY29uZmlnIjogewogICAgInZlcnNpb24iOiAiMi4wIiwKICAgICJsb2dpY2FsSWQiOiAiZTQ0MmQwZjYtNzA3Zi00YTQwLTgyYTQtYmRmYTE1NGM1ZDgzIgogIH0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "de5e5784-9bcb-4517-9415-017e8c535806"
}
2025-07-06 02:15:22,693 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:22,694 - INFO - fabric_cicd.fabric_workspace - Publishing 00_all_warehouses_config_notebook_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:22,696 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '00_all_warehouses_config_notebook_ddl_scripts'
2025-07-06 02:15:22,697 - INFO - fabric_cicd.fabric_workspace - Creating new item: 00_all_warehouses_config_notebook_ddl_scripts (Notebook)
2025-07-06 02:15:22,697 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "00_all_warehouses_config_notebook_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMF9hbGxfd2FyZWhvdXNlc19jb25maWdfbm90ZWJvb2tfZGRsX3NjcmlwdHMiLAogICAgImRlc2NyaXB0aW9uIjogIkV4ZWN1dGVzIGEgc2V0IG9mIERETCBjZWxscyBpbiB0aGUgdGFyZ2V0IExha2Vob3VzZS4iCiAgfSwKICAiY29uZmlnIjogewogICAgInZlcnNpb24iOiAiMi4wIiwKICAgICJsb2dpY2FsSWQiOiAiNGVmZGYwMzItMmNiNC00N2RkLWE2YjMtN2JmNWE3NmJlNGE5IgogIH0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "1200c41c-d568-49b4-8b68-c4ab5b7e8459"
}
2025-07-06 02:15:27,851 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:27,852 - INFO - fabric_cicd.fabric_workspace - Publishing 00_all_warehouses_orchestrator_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:27,853 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '00_all_warehouses_orchestrator_ddl_scripts'
2025-07-06 02:15:27,854 - INFO - fabric_cicd.fabric_workspace - Creating new item: 00_all_warehouses_orchestrator_ddl_scripts (Notebook)
2025-07-06 02:15:27,854 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "00_all_warehouses_orchestrator_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMF9hbGxfd2FyZWhvdXNlc19vcmNoZXN0cmF0b3JfZGRsX3NjcmlwdHMiLAogICAgImRlc2NyaXB0aW9uIjogIkV4ZWN1dGVzIGEgc2V0IG9mIERETCBjZWxscyBpbiB0aGUgdGFyZ2V0IExha2Vob3VzZS4iCiAgfSwKICAiY29uZmlnIjogewogICAgInZlcnNpb24iOiAiMi4wIiwKICAgICJsb2dpY2FsSWQiOiAiYTM1Y2U0YjAtYzMwMi00OTdjLWFhNjItNjFlYmVlOGU0ODRjIgogIH0KfQ==",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "1200c41c-d568-49b4-8b68-c4ab5b7e8459"
}
2025-07-06 02:15:32,716 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:32,718 - INFO - fabric_cicd.fabric_workspace - Publishing 001_Initial_Creation_Config_Warehouses_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:32,722 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '001_Initial_Creation_Config_Warehouses_ddl_scripts'
2025-07-06 02:15:32,723 - INFO - fabric_cicd.fabric_workspace - Creating new item: 001_Initial_Creation_Config_Warehouses_ddl_scripts (Notebook)
2025-07-06 02:15:32,723 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "001_Initial_Creation_Config_Warehouses_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMDFfSW5pdGlhbF9DcmVhdGlvbl9Db25maWdfV2FyZWhvdXNlc19kZGxfc2NyaXB0cyIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhlY3V0ZXMgYSBzZXQgb2YgRERMIGNlbGxzIGluIHRoZSB0YXJnZXQgTGFrZWhvdXNlLiIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICJmMjZkMjlmMS02MTdiLTRhMTItYjIzYi02NmY4NTYyOGUxZDEiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "de5e5784-9bcb-4517-9415-017e8c535806"
}
2025-07-06 02:15:38,000 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:38,001 - INFO - fabric_cicd.fabric_workspace - Publishing 002_Parquet_Load_Update_Config_Warehouses_ddl_scripts.Notebook as it is in the items to include list.
2025-07-06 02:15:38,003 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook '002_Parquet_Load_Update_Config_Warehouses_ddl_scripts'
2025-07-06 02:15:38,003 - INFO - fabric_cicd.fabric_workspace - Creating new item: 002_Parquet_Load_Update_Config_Warehouses_ddl_scripts (Notebook)
2025-07-06 02:15:38,004 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "002_Parquet_Load_Update_Config_Warehouses_ddl_scripts",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICIwMDJfUGFycXVldF9Mb2FkX1VwZGF0ZV9Db25maWdfV2FyZWhvdXNlc19kZGxfc2NyaXB0cyIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhlY3V0ZXMgYSBzZXQgb2YgRERMIGNlbGxzIGluIHRoZSB0YXJnZXQgTGFrZWhvdXNlLiIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICIxNGIwYmI4MS0zZWU0LTRlMGItYTc2NC0zNDgzODg4YTM0MzUiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "de5e5784-9bcb-4517-9415-017e8c535806"
}
2025-07-06 02:15:44,326 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:44,327 - INFO - fabric_cicd.fabric_workspace - Publishing extract_from_synapse.Notebook as it is in the items to include list.
2025-07-06 02:15:44,339 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'extract_from_synapse'
2025-07-06 02:15:44,339 - INFO - fabric_cicd.fabric_workspace - Creating new item: extract_from_synapse (Notebook)
2025-07-06 02:15:44,340 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "extract_from_synapse",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJleHRyYWN0X2Zyb21fc3luYXBzZSIsCiAgICAiZGVzY3JpcHRpb24iOiAiTmV3IG5vdGVib29rIgogIH0sCiAgImNvbmZpZyI6IHsKICAgICJ2ZXJzaW9uIjogIjIuMCIsCiAgICAibG9naWNhbElkIjogImY3Mjk0MWE2LWJjN2EtODNiNS00YmZlLTYxOTkxYmY5YmI0ZSIKICB9Cn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "69a7f495-25bb-423a-8b01-c2e4461d1ff8"
}
2025-07-06 02:15:51,054 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:51,055 - INFO - fabric_cicd.fabric_workspace - Publishing jw_extract_from_synapse.Notebook as it is in the items to include list.
2025-07-06 02:15:51,060 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'jw_extract_from_synapse'
2025-07-06 02:15:51,060 - INFO - fabric_cicd.fabric_workspace - Creating new item: jw_extract_from_synapse (Notebook)
2025-07-06 02:15:51,061 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "jw_extract_from_synapse",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJqd19leHRyYWN0X2Zyb21fc3luYXBzZSIsCiAgICAiZGVzY3JpcHRpb24iOiAiTmV3IG5vdGVib29rIgogIH0sCiAgImNvbmZpZyI6IHsKICAgICJ2ZXJzaW9uIjogIjIuMCIsCiAgICAibG9naWNhbElkIjogImI1MzQ1ZTFjLTJlNjYtOWE4Ny00NTk2LTc4OTRmMmEzMjdjOCIKICB9Cn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "69a7f495-25bb-423a-8b01-c2e4461d1ff8"
}
2025-07-06 02:15:56,283 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:15:56,285 - INFO - fabric_cicd.fabric_workspace - Publishing sm_extract_from_synapse.Notebook as it is in the items to include list.
2025-07-06 02:15:56,299 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'sm_extract_from_synapse'
2025-07-06 02:15:56,299 - INFO - fabric_cicd.fabric_workspace - Creating new item: sm_extract_from_synapse (Notebook)
2025-07-06 02:15:56,300 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "sm_extract_from_synapse",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJzbV9leHRyYWN0X2Zyb21fc3luYXBzZSIsCiAgICAiZGVzY3JpcHRpb24iOiAiTmV3IG5vdGVib29rIgogIH0sCiAgImNvbmZpZyI6IHsKICAgICJ2ZXJzaW9uIjogIjIuMCIsCiAgICAibG9naWNhbElkIjogIjc1MTk5OTIxLWRhNTUtYWEzMC00MzUwLTZmNWE0YTRlMWQxYyIKICB9Cn0=",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "69a7f495-25bb-423a-8b01-c2e4461d1ff8"
}
2025-07-06 02:16:01,490 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:16:01,492 - INFO - fabric_cicd.fabric_workspace - Publishing load_to_lakehouse_tables.Notebook as it is in the items to include list.
2025-07-06 02:16:01,501 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'load_to_lakehouse_tables'
2025-07-06 02:16:01,501 - INFO - fabric_cicd.fabric_workspace - Creating new item: load_to_lakehouse_tables (Notebook)
2025-07-06 02:16:01,502 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "load_to_lakehouse_tables",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJsb2FkX3RvX2xha2Vob3VzZV90YWJsZXMiLAogICAgImRlc2NyaXB0aW9uIjogIk5ldyBub3RlYm9vayIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICI0Njc0MTA4YS0xMDY2LThiNzAtNGU3Yy03YWVhYzliOTRjNzMiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "47c6e79b-6ab6-4a60-b113-b41d0a27780a"
}
2025-07-06 02:16:06,695 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:16:06,696 - INFO - fabric_cicd.fabric_workspace - Publishing pyspark_platform_test_platform_testing.Notebook as it is in the items to include list.
2025-07-06 02:16:06,699 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'pyspark_platform_test_platform_testing'
2025-07-06 02:16:06,699 - INFO - fabric_cicd.fabric_workspace - Creating new item: pyspark_platform_test_platform_testing (Notebook)
2025-07-06 02:16:06,699 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "pyspark_platform_test_platform_testing",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJweXNwYXJrX3BsYXRmb3JtX3Rlc3RfcGxhdGZvcm1fdGVzdGluZyIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICI3YzY3YzIxZS1hZDE4LTQwMmYtYTIwMS0wZjhmODVhMWFkNjIiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "74fd44fd-973e-4f31-b833-9c9680791bae"
}
2025-07-06 02:16:10,934 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:16:10,936 - INFO - fabric_cicd.fabric_workspace - Publishing python_platform_test.Notebook as it is in the items to include list.
2025-07-06 02:16:10,938 - INFO - fabric_cicd.fabric_workspace - Publishing Notebook 'python_platform_test'
2025-07-06 02:16:10,938 - INFO - fabric_cicd.fabric_workspace - Creating new item: python_platform_test (Notebook)
2025-07-06 02:16:10,939 - INFO - fabric_cicd.fabric_workspace - Request body: {
  "displayName": "python_platform_test",
  "type": "Notebook",
  "definition": {
    "parts": [
      {
        "path": ".platform",
        "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIk5vdGVib29rIiwKICAgICJkaXNwbGF5TmFtZSI6ICJweXRob25fcGxhdGZvcm1fdGVzdCIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICI2M2IxODhjYy05MjQ2LTQ5Y2QtYjUyYy0zM2NjNDNjN2JkYTAiCiAgfQp9",
        "payloadType": "InlineBase64"
      },
      {
        "path": "notebook-content.py",
        "payload": "",
        "payloadType": "InlineBase64"
      }
    ]
  },
  "folderId": "74fd44fd-973e-4f31-b833-9c9680791bae"
}
2025-07-06 02:16:15,890 - INFO - fabric_cicd.fabric_workspace - ->Published
2025-07-06 02:16:17,083 - INFO - fabric_cicd._items._environment - Checking Environment Publish State for []
2025-07-06 02:16:17,604 - INFO - fabric_cicd._items._environment - ->Published.
